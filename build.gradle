// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'
    ext.room_version = '2.2.5'
    ext.kotlin_coroutines_version = '1.3.5'
    ext.dagger_version = '2.27'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }

    // testing
    ext {
        androidLibs = [
                appcompat           : 'androidx.appcompat:appcompat:1.1.0',
                core                : 'androidx.core:core-ktx:1.2.0',
                constraintLayout    : 'androidx.constraintlayout:constraintlayout:1.1.3',
                cardview            : "androidx.cardview:cardview:1.0.0",
                recyclerview        : 'androidx.recyclerview:recyclerview:1.1.0',
                glide               : 'com.github.bumptech.glide:glide:4.11.0',
                roomRuntime         : "androidx.room:room-runtime:$room_version",
                room                : "androidx.room:room-ktx:$room_version",
                lifecycleViewModel  : 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0',
                gson                : 'com.google.code.gson:gson:2.8.5',
                dagger2             : "com.google.dagger:dagger:$dagger_version"
        ]

        kotlinLibs = [
                stdlib      : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                coroutines  : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
        ]

        androidKaptLibs = [
                glideCompiler   : 'com.github.bumptech.glide:compiler:4.11.0',
                roomCompiler    : "androidx.room:room-compiler:$room_version",
                dagger2Compiler : "com.google.dagger:dagger-compiler:$dagger_version"

        ]

        libs = [
                okhttpLoggingInterceptor    : 'com.squareup.okhttp3:logging-interceptor:4.5.0',
                retrofit                    : 'com.squareup.retrofit2:retrofit:2.8.1',
                retrofitGson                : 'com.squareup.retrofit2:converter-gson:2.8.1'
        ]

        testLibs = [
                junit        : 'junit:junit:4.13',
                mockitoKotlin: 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0',
                mockitoInline: 'org.mockito:mockito-inline:2.28.2',
                coroutinesTest: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version",
                testShared   : project(':testShared')
        ]

        // LiveData testing
        androidxTestLibs = [
                archCoreTesting: 'androidx.arch.core:core-testing:2.1.0'
        ]

        androidTestLibs = [
                testRunner      : 'androidx.test:runner:1.2.0',
                espresso        : 'androidx.test.espresso:espresso-contrib:3.2.0',
                rules           : 'androidx.test:rules:1.2.0',
                extJunit        : 'androidx.test.ext:junit-ktx:1.1.1',
                roomTesting     : "androidx.room:room-testing:$room_version",
                mockWebServer   : 'com.squareup.okhttp3:mockwebserver:4.2.1',
                okhttpIdling    : 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
        ]

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

